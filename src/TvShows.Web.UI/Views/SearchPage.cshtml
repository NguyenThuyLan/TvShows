@using TvShows.Web.Models
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<SearchModel>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
	var requestPage = Model.Root().Children().Where(x=>x.ContentType.Alias == Request.ModelTypeAlias).First();
	var searchPage = Model.Root().Children().Where(x => x.ContentType.Alias == SearchPage.ModelTypeAlias).First() as SearchPage;
	Layout = "_Layout.cshtml";
}
<div class="container">
	<div class="row">
		<div class="col-md-9 col-sm-12 col-xs-12">

			@if (Model.SearchResults != null && Model.SearchResults.Any())
			{
				<p>@Html.Raw(string.Format(searchPage.SearchResult, Model.Query, Model.TotalResults))</p>

				@foreach (var item in Model.SearchResults)
				{
					<div class="blog-item-style-1 blog-item-style-3">
						<img src="@item.PublishedItem?.PreImage.LocalCrops.Src" alt="">
						<div class="blog-it-infor">
							<h3><a href="@item.PublishedItem.Url()">@item.PublishedItem.ShowTitle</a></h3>
							<span class="time">@item.PublishedItem.Premiered</span>
							<p>@Html.Raw(item.PublishedItem.Summary)</p>
						</div>
					</div>
				}
			}
			else
			{
				<h1 class="small-12 cell" style="color: #f1eaea;">@searchPage.ResultTitle</h1>
				<div class="callout primary">
					<p>
						@Html.Raw(searchPage.NoResultNote)
						<a href="@requestPage?.Url()">@searchPage.Createbtn</a>
					</p>
				</div>
			}
		</div>

		<div class="col-md-3 col-sm-12 col-xs-12">
			<div class="sidebar">
				@await Html.PartialAsync("layout/SideBar")
			</div>
		</div>
	</div>
</div>