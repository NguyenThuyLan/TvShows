@using TvShows.Web.Models
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<SearchModel>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
	var requestPage = Model.Root().Children().Where(x=>x.ContentType.Alias == Request.ModelTypeAlias).First();
	Layout = "_Layout.cshtml";
}
<div class="page-single">
	<div class="container">
		<div class="row">
			<div class="col-md-9 col-sm-12 col-xs-12">
				
				@if (Model.SearchResults != null && Model.SearchResults.Any())
				{
					<p>Your search for <strong>@Model.Query</strong> returned a number of <strong> @Model.TotalResults</strong> result(s) on item types: </p>

					@foreach (var item in Model.SearchResults)
					{
						<div class="blog-item-style-1 blog-item-style-3">
							<img src="@item.PublishedItem?.PreImage.LocalCrops.Src" alt="">
							<div class="blog-it-infor">
								<h3><a href="@item.PublishedItem.Url()">@item.PublishedItem.Name</a></h3>
								<span class="time">@item.PublishedItem.Premiered</span>
								<p>@Html.Raw(item.PublishedItem.Summary)</p>
							</div>
						</div>
					}
				}
				else
				{
					<h1 class="small-12 cell" style="color: #f1eaea;">Search</h1>
					<div class="callout primary">
						<p>
							Pardon us, but no shows or people matching your query were found. <br />
							You can <a href="@requestPage?.Url()">make a request</a> to add the show you're looking for.
						</p>
					</div>
				}
			</div>

			<div class="col-md-3 col-sm-12 col-xs-12">
				<div class="sidebar">
					@await Html.PartialAsync("layout/SideBar")
				</div>
			</div>
		</div>
	</div>
</div>